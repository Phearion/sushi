name: SUSHI API Deployment

on:
    push:
        tags:
            - 'v*' # Trigger the workflow on tags starting with 'v'

jobs:
    setup:
        runs-on: self-hosted

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Check if tag exists
              id: check_tag
              run: |
                  TAG_NAME=$(git describe --tags --abbrev=0)
                  if [ -z "$TAG_NAME" ]; then
                      echo "No tags found. Skipping deployment."
                      exit 1
                  fi
                  echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20' # specify your Node.js version

            - name: Install dependencies
              run: npm install

        outputs:
            tag_name: ${{ steps.check_tag.outputs.TAG_NAME }}

    test:
        needs: setup
        runs-on: self-hosted

        steps:
            - name: Execute Gradio Modification
              run: npm run fix:gradio

            - name: Run tests
              run: npm run test

    build:
        needs: test
        runs-on: self-hosted

        steps:
            - name: Build
              run: npm run build

            - name: Deploy private files
              run: sh deployPrivateFiles.sh

            - name: Deploy AI sql model
              run: npm run move:models

    docker:
        needs: build
        runs-on: self-hosted

        steps:
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: phanthive/sushi:${{ needs.setup.outputs.TAG_NAME }}

    deploy:
        needs: docker
        runs-on: self-hosted

        steps:
            - name: Deploy to server
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.PROD_SERVER_IP }}
                  username: ${{ secrets.PROD_SERVER_USER }}
                  key: ${{ secrets.PROD_SERVER_SSH }}
                  port: ${{ secrets.PROD_SERVER_PORT }}
                  script: |
                      docker pull phanthive/sushi:${{ needs.setup.outputs.TAG_NAME }}
                      docker stop sushi || true
                      docker rm sushi || true
                      docker build --build-arg API_PORT=${{ secrets.API_PORT }} -t phanthive/sushi:${{ needs.setup.outputs.TAG_NAME }} .
                      docker run -e PORT=${{ secrets.API_PORT }} -d --name sushi -p ${{ secrets.API_PORT }}:${{ secrets.API_PORT }} phanthive/sushi:${{ needs.setup.outputs.TAG_NAME }}
